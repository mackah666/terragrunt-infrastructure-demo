name: 'Terragrunt GitHub Actions'
on:
  push:
    branches: [main]

  
env:
  tf_version: 'latest'
  tg_version: 'latest'
  tf_working_dir: '.'

jobs:
  terragrunt:
    name: 'Terragrunt'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: 'Terragrunt Format'
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: 'terraform'
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - name: 'Terragrunt Init'
#         uses: the-commons-project/terragrunt-github-actions@master
#         with:
#           tf_actions_version: ${{ env.tf_version }}
#           tg_actions_version: ${{ env.tg_version }}
#           tf_actions_subcommand: 'init'
#           tf_actions_working_dir: ${{ env.tf_working_dir }}
#           tf_actions_comment: true
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terragrunt Validate'
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: 'terraform'
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terragrunt Plan'
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


# # This is a basic workflow to help you get started with Actions

# name: CI

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:
  

# # # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# # jobs:
# #   # This workflow contains a single job called "build"
# #   build:
# #     # The type of runner that the job will run on
# #     runs-on: ubuntu-latest

# #     # Steps represent a sequence of tasks that will be executed as part of the job
# #     steps:
# #       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
# #       - uses: actions/checkout@v2

# #       # Runs a single command using the runners shell
# #       - name: Run a one-line script
# #         run: echo Hello, world!

# #       # Runs a set of commands using the runners shell
# #       - name: Run a multi-line script
# #         run: |
# #           echo Add other actions to build,
# #           echo test, and deploy your project.


# # name: Lint and Validate Terraform Code

# # on:
# #   pull_request:
# #     branches:
# #       - main
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     env:
#       AWS_DEFAULT_REGION: us-east-2
#     steps:
#     - name: Terragrunt GitHub Actions
#       uses: the-commons-project/terragrunt-github-actions@1.0.6

# #     - uses: actions/checkout@v1
# #     - name: Install Terraform and Terragrunt
# #       run: |
# #         brew tap rocketinsights/tgenv
# #         brew install tfenv tgenv
# #         tfenv install
# #         tgenv install
# #     - name: Get Versions
# #       run: |
# #         terragrunt --version
# #         terraform --version
#     # - name: Terraform Init
#     #   run: find . -type f -name "*.tf" -exec dirname {} \;|sort -u | while read m; do (cd "$m" && terraform init -input=false -backend=false) || exit 1; done

#     # - name: Validate Terraform configs
#     #   run: find . -name ".terraform" -prune -o -type f -name "*.tf" -exec dirname {} \;|sort -u | while read m; do (cd "$m" && terraform validate && echo "âˆš $m") || exit 1 ; done

#     # - name: Check Terraform config formatting 
#     #   run: terraform fmt -write=false -recursive